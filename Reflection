#REFLECTION
The B+ Tree group assignment was a great project for indexing in C++ with the use of an object oriented data structure used to implement a system of indexes or keys as zip-codes on a database of nearly fifty-thousand records. Each node of the tree contains an ordered list of keys and pointers to blocks within the lower lever leafs/nodes of the tree. The use of an interactive menu is a good interface design for index databases. Being designed to sort input from a created database text file along with the usability to add records without completely having to restructure/reorganize, by growing dynamically with more and more levels. Search function being used for every operation of the database including the deletion of a record which may result in dangling pointers, and even modify which needs extra emphasis on processes of command based on which field within a record the user desires to modify. A lot of time was spent using an array of different structured b-trees, continuously finding design flaws. Planning before you code a desired database is highly advisable due to the variety in ways to structure your database. In our project we didnâ€™t want a lot of random accesses through memory which could take a single node to fit a buffer line, but leaf blocks which are contiguous on the disk that uses a sorted structure which is easier to maintain in the future making it very efficient for a database of addresses which use the zip-codes as its query of indexes.
